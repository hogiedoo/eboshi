%table{:class => "invoice #{invoice.status}", :width=>"100%", :border=>"0", :cellpadding=>"0", :cellspacing=>"0" }
  %col{:width=>"5%"}
  %col{:width=>"12%"}
  %col{:width=>"12%"}
  %col{:width=>"8%"}
  %col{:width=>"8%"}
  %col{:width=>"10%"}
  %col{:width=>"45%"}
  
  %thead{ :id => "invoice_#{invoice.id_or_new}" }
    - if invoice.status == 'unbilled'
      %tr
        %td{ :colspan => 7 }
          %h2 Building Invoice
      %tr
        %td{ :colspan => 7 }
          = button_to 'Clock In', clock_in_path(@client), :id => 'clock_in', :class => "button left"
          = link_to 'New Time Item', new_client_work_path(@client), :class => "button left"
          = link_to 'New Flat Fee', new_client_adjustment_path(@client), :class => "button left"
          .clear          
    - else
      %tr
        %td{ :colspan => 7 }
          %h2
            Invoice ##{invoice.id}
            = " - #{invoice.project_name}" unless invoice.project_name.blank?
      %tr
        %td{ :colspan => 5 }
          = link_to 'Hide Details', invoice, :class => 'invoice_hide_details button'
          = link_to 'Export PDF', invoice_path(invoice, :format => :pdf), :class=> "button"
          = link_to 'Edit', edit_invoice_path(invoice), :class=>"button"
          = link_to 'Delete', invoice_path(invoice), :method => :delete, :confirm => 'Are you certain you want to delete this invoice? Its line items will not be deleted and will go back in your unassigned list.', :class=>"button"
        %td.total= number_to_currency invoice.total
        %td
          %div
            Invoiced on:
            = invoice.date.to_s(:slash) if invoice.date
          - unless invoice.payments.empty?
            %b PAYMENTS:
            - invoice.payments.each do |p|
              %li= number_to_currency(p.total)+' '+p.created_at.to_s(:slash)
            - unless invoice.paid?
              = number_to_currency invoice.balance
              remaining
          - else
            %b.red UNPAID
            =# button_to 'Mark as Paid', paid_invoice_path(invoice)
  
  %tr#new_line_items
    %th
    %th user
    %th time
    %th hours
    %th rate
    %th total
    %th notes
  %tr#totals
    %td{:colspan => "3"}
    %td.total_hours= number_with_precision invoice.total_hours, :precision => 2  
    %td &nbsp;
    %td.total= number_to_currency invoice.balance
    %td.align_left
      %b Current Balance
  = render invoice.line_items.sort
  - invoice.users.each_with_index do |user, i|
    %tr.breakdown
      %td
      %td= user ? h(user.name) : "<em>Ambiguous</em>".html_safe
      %td
      %td.total_hours= number_with_precision invoice.total_hours_for_user(user), :precision => 2  
      %td &nbsp;
      %td.total= number_to_currency invoice.total_for_user(user)
      - if i == 0
        %td.align_left{ :rowspan => invoice.users.count, :valign => "middle" }
          %b Breakdown

